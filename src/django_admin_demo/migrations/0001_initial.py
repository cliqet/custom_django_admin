# Generated by Django 5.1.3 on 2025-04-28 10:18

import django.core.validators
import django.db.models.deletion
import django_admin.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Enter country', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Enter level', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DemoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('color', models.CharField(choices=[('Blue', 'Blue'), ('Red', 'Red')], default='Blue', max_length=10, verbose_name='Color')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('email', models.EmailField(help_text='Please enter a valid email address', max_length=254, validators=[django.core.validators.EmailValidator(message='Please enter a valid email address')], verbose_name='Email')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='Ordering')),
                ('range_number', models.PositiveSmallIntegerField(default=5, help_text='Enter a number from 5 to 10', validators=[django.core.validators.MinValueValidator(limit_value=5, message='Min is 5'), django.core.validators.MaxValueValidator(limit_value=10, message='Max is 10')], verbose_name='Range Number')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Max of 10 digits with format: 12345678.90', max_digits=10, validators=[django.core.validators.RegexValidator(message='Enter a valid amount (up to 8 digits before the decimal and 2 digits', regex='^\\d{1,8}(\\.\\d{0,2})?$')], verbose_name='Amount')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('date', models.DateField(verbose_name='Date')),
                ('time', models.TimeField(verbose_name='Time')),
                ('last_log', models.DateTimeField(verbose_name='Last Log')),
                ('file', models.FileField(help_text='Allowed file types: [Any] | Max file size in MB: [None]', upload_to='', verbose_name='File')),
                ('image', models.ImageField(help_text="Allowed file types: ['.jpg', '.jpeg', '.png'] | Max file size in MB: [2]", upload_to='', verbose_name='Image')),
                ('metadata', models.JSONField(verbose_name='Metadata')),
                ('html', django_admin.models.HTMLField(help_text='Enter html', verbose_name='HTML')),
                ('classification', models.ManyToManyField(to='django_admin_demo.classification', verbose_name='Classification')),
                ('permissions', models.ManyToManyField(to='auth.permission', verbose_name='Permissions')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_admin_demo.type', verbose_name='Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CountryProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area', models.PositiveIntegerField(help_text='Enter area number')),
                ('country', models.OneToOneField(help_text='Select country', on_delete=django.db.models.deletion.CASCADE, to='django_admin_demo.country')),
                ('level', models.ForeignKey(help_text='Select level', on_delete=django.db.models.deletion.CASCADE, to='django_admin_demo.level')),
                ('type', models.ForeignKey(help_text='Select type', on_delete=django.db.models.deletion.CASCADE, to='django_admin_demo.type')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
